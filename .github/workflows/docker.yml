name: docker

on:
  push:
    branches: [ master ]

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code with full history 
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. Build Docker image from custom path
    - name: Build Docker image
      run: | 
        docker build \
        -t ${{ secrets.DOCKERHUB_USERNAME }}/admintask:latest \
        -f docker/Dockerfile \
        docker/

        echo "Docker image built successfully"
        docker images | grep ${{ secrets.DOCKERHUB_USERNAME }}/admintask

  test:
    runs-on: ubuntu-latest
    needs: verify
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s

    steps:
      - uses: actions/checkout@v4
      
      - name: Build app image
        run: |
          docker build \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/admintask:latest \
          -f docker/Dockerfile \
          docker/

          echo "Docker image built successfully"
          docker images | grep ${{ secrets.DOCKERHUB_USERNAME }}/admintask

      
      - name: Run tests
        run: |
          docker run --network host \
            -e TESTING=1 \
            ${{ secrets.DOCKERHUB_USERNAME }}/admintask:latest pytest -v ./tests/

      - name: Push to docker registry
        if: success()
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/admintask:latest
          
  deploy:
    runs-on: self-hosted
    needs: [ test ]
    steps:
      - name: Execute ssh command via using private key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: cd $HOME/tasks/docker && ./restart.sh
 
    
